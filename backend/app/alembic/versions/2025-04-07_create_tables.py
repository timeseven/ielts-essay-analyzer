"""create tables

Revision ID: 2d01bcb46ead
Revises: 
Create Date: 2025-04-07 16:00:36.059297

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2d01bcb46ead'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clients',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('essay_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_essay_categories_name'), 'essay_categories', ['name'], unique=False)
    op.create_table('essay_questions',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('task_type', postgresql.ENUM('task_1', 'task_2', name='tasktype'), server_default='task_1', nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['essay_categories.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_essay_questions_category_id'), 'essay_questions', ['category_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=512), nullable=False),
    sa.Column('is_admin', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('current_client_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['current_client_id'], ['clients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index('ix_users_email_created_at', 'users', ['email', 'created_at'], unique=False)
    op.create_index('ix_users_username_created_at', 'users', ['username', 'created_at'], unique=False)
    op.create_table('profiles',
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('is_client_owner', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('avatar_url', sa.String(length=512), nullable=True),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('status', postgresql.ENUM('pending', 'invited', 'active', 'deactivated', name='status'), server_default=sa.text("'pending'"), nullable=False),
    sa.Column('last_login_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('client_id', 'user_id')
    )
    op.create_index('ix_profiles_client_id', 'profiles', ['client_id'], unique=False)
    op.create_index('ix_profiles_user_id', 'profiles', ['user_id'], unique=False)
    op.create_table('essay_contents',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.UUID(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['client_id', 'owner_id'], ['profiles.client_id', 'profiles.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['question_id'], ['essay_questions.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_essays_client_id', 'essay_contents', ['client_id'], unique=False)
    op.create_index('ix_essays_owner_id', 'essay_contents', ['owner_id'], unique=False)
    op.create_table('essay_assessments',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('essay_id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('overall_score', sa.Numeric(precision=2, scale=1), nullable=False),
    sa.Column('overall_score_feedback', sa.Text(), nullable=False),
    sa.Column('task_achievement', sa.Numeric(precision=2, scale=1), nullable=False),
    sa.Column('task_achievement_feedback', sa.Text(), nullable=False),
    sa.Column('coherence_cohesion', sa.Numeric(precision=2, scale=1), nullable=False),
    sa.Column('coherence_cohesion_feedback', sa.Text(), nullable=False),
    sa.Column('lexical_resource', sa.Numeric(precision=2, scale=1), nullable=False),
    sa.Column('lexical_resource_feedback', sa.Text(), nullable=False),
    sa.Column('grammatical_range', sa.Numeric(precision=2, scale=1), nullable=False),
    sa.Column('grammatical_range_feedback', sa.Text(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('coherence_cohesion >= 0 AND coherence_cohesion <= 9', name='check_coherence_cohesion_range'),
    sa.CheckConstraint('grammatical_range >= 0 AND grammatical_range <= 9', name='check_grammatical_range_range'),
    sa.CheckConstraint('lexical_resource >= 0 AND lexical_resource <= 9', name='check_lexical_resource_range'),
    sa.CheckConstraint('overall_score >= 0 AND overall_score <= 9', name='check_overall_score_range'),
    sa.CheckConstraint('task_achievement >= 0 AND task_achievement <= 9', name='check_task_achievement_range'),
    sa.ForeignKeyConstraint(['client_id', 'owner_id'], ['profiles.client_id', 'profiles.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['essay_id'], ['essay_contents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_essay_assessments_essay_id'), 'essay_assessments', ['essay_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_essay_assessments_essay_id'), table_name='essay_assessments')
    op.drop_table('essay_assessments')
    op.drop_index('ix_essays_owner_id', table_name='essay_contents')
    op.drop_index('ix_essays_client_id', table_name='essay_contents')
    op.drop_table('essay_contents')
    op.drop_index('ix_profiles_user_id', table_name='profiles')
    op.drop_index('ix_profiles_client_id', table_name='profiles')
    op.drop_table('profiles')
    op.drop_index('ix_users_username_created_at', table_name='users')
    op.drop_index('ix_users_email_created_at', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_essay_questions_category_id'), table_name='essay_questions')
    op.drop_table('essay_questions')
    op.drop_index(op.f('ix_essay_categories_name'), table_name='essay_categories')
    op.drop_table('essay_categories')
    op.drop_table('clients')
    # ### end Alembic commands ###
